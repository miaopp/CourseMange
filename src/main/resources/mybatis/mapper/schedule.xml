<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Schedule">
    <resultMap id="scheduleResultMap" type="Schedule">
        <result property="id" column="schedule_id"/>
        <result property="labId" column="lab_id"/>
        <result property="courseId" column="course_id"/>
        <result property="dayOfWeek" column="day_of_week"/>
    </resultMap>
    <insert id="saveScheduleList" parameterType="Schedule">
        <![CDATA[
          insert into schedule
          (lab_id, state, week, day_of_week, orders)
          values
        ]]>
        <foreach collection="list" item="item" index="index" separator=",">
            <![CDATA[
                    (#{item.labId}, #{item.state}, #{item.week}, #{item.dayOfWeek}, #{item.orders})
            ]]>
        </foreach>
    </insert>
    <select id="selectCount" parameterType="Schedule">
        <![CDATA[
          select count (*)
          from schedule
        ]]>
    </select>
    <select id="selectOrders" parameterType="OrderFilter" resultType="java.lang.Integer">
        <![CDATA[
            select orders
            from
            (select orders, count(orders) cnt
            FROM schedule
            where lab_id = #{labId} and day_of_week = #{dayOfWeek} and state = #{status} and week >= #{beginWeek} and week <= #{endWeek}
            group by orders) a
            where cnt >= #{length}
        ]]>
    </select>
    <update id="updateScheduleState" parameterType="ScheduleStatus">
        <![CDATA[
            update schedule set state = #{status}, course_id = #{courseId}
            where lab_id = #{labId} and day_of_week = #{dayOfWeek} and week >= #{beginWeek} and week <= #{endWeek} and orders = #{orders}
        ]]>
    </update>
    <update id="courseApplyIsNotAccepted" parameterType="ScheduleStatus">
        <![CDATA[
            update schedule set state = #{status}
            where lab_id = #{labId} and course_id = #{courseId} and day_of_week = #{dayOfWeek} and week >= #{beginWeek} and week <= #{endWeek} and orders = #{orders}
        ]]>
    </update>
</mapper>